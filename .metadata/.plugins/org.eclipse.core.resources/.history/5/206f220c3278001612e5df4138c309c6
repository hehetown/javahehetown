<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.hehetown.javaee</groupId>
  <artifactId>javahehetown-parent</artifactId>
  <version>1.0</version>
  <packaging>pom</packaging>
  <name>javahehetown parent</name>
  <description>javahehetown parent pom</description>
  <modules>
    <module>javahehetown-webapp</module>
    <module>javahehetown-core</module>
  </modules>

  <properties>
    <!-- 环境配置 -->
    <jdk.version>1.8</jdk.version>
    <tomcat.version>2.2</tomcat.version>
    <jetty.version>9.4.0.M1</jetty.version>
    <webserver.port>8181</webserver.port>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <downloadSources>true</downloadSources>
    <javahehetown.version>1.0</javahehetown.version>

    <!-- 主要依赖库配置 -->
    <spring.version>4.3.2</spring.version>

    <!-- java web 依赖包 -->
    <servlet-api.version>3.1.0</servlet-api.version>
    <jsp-api.version>2.2</jsp-api.version>


    <!-- 辅助依赖包 -->
    <aspectj.version>1.8.9</aspectj.version>
    <cglib.version>3.2.4</cglib.version>
    <cglib-nodep.version>3.2.4</cglib-nodep.version>
    <asm.version>6.0_ALPHA</asm.version>

    <!-- 持久化相关依赖包 -->
    <mybatis.version>3.4.1</mybatis.version>
    <mybatis-spring.version>1.3.0</mybatis-spring.version>
    <mysql.driver.version>6.0.3</mysql.driver.version>

    <hibernate.version>5.2.2.Final</hibernate.version>

    <oracle.driver.version>10.2.0.4.0</oracle.driver.version>
    <jtds.version>1.3.1</jtds.version>
    <!-- 内嵌数据库 H2 Database -->
    <h2.database.version>1.4.192</h2.database.version>



    <!-- 连接池 -->
    <druid.version>1.0.24</druid.version>

    <!-- 工具类依赖包 start -->

    <!-- json -->
    <fastjson.version>1.2.17</fastjson.version>
    <jackson.version>2.8.2</jackson.version>
    <gson.version>2.7</gson.version>

    <!-- LOGGING -->
    <slf4j.version>1.7.21</slf4j.version>
    <log4j-core.version>2.6.2</log4j-core.version>
    <!-- 报表工具 -->
    <jasperreports.version>6.3.0</jasperreports.version>


    <!-- 工作流、业务流、报表 -->
    <!-- Activiti是一个业务流程管理(BPM)和工作流系统，适用于开发人员和系统管理员。 -->
    <activiti.version>6.0.0.Beta4</activiti.version>
    <!-- jBpm是一个灵活可扩展的工作流管理系统。 -->
    <jbpm.version>7.0.0.Beta1</jbpm.version>

    <!-- XML -->
    <xerces2.version>2.11.0</xerces2.version>
    <dom4j.version>2.11.0</dom4j.version>
    <xstream.version>1.4.9</xstream.version>
    <!-- HTML  -->
    <jsoup.version>1.9.2</jsoup.version>
    <!-- word、excel -->
    <apache.poi.version>3.15-beta2</apache.poi.version>


    <!-- pdf -->
    <itextpdf.version>5.5.9</itextpdf.version>
    <apache.pdfbox.version>2.0.2</apache.pdfbox.version>


    <!-- 语言、搜索、分词相关依赖包 start -->
    <apache.solr.version>6.2.0</apache.solr.version>
    <elasticsearch.version>5.0.0-alpha5</elasticsearch.version>
    <pinyin4j.version>2.5.1</pinyin4j.version>
    <lucene.version>6.2.0</lucene.version>
    <!-- 语言、搜索、分词相关依赖包 end -->

    <!-- 邮件相关 -->
    <javax.mail.version>1.5.6</javax.mail.version>

    <!-- css、js压缩工具依赖包 -->
    <yuicompressor.version>2.4.8</yuicompressor.version>

    <!--Apache commons工具集 -->
    <commons-lang3.version>3.4</commons-lang3.version>
    <commons-io.version>2.5</commons-io.version>
    <commons-codec.version>1.10</commons-codec.version>
    <commons-fileupload.version>1.3.2</commons-fileupload.version>
    <commons-beanutils.version>1.9.2</commons-beanutils.version>
    <!-- Guava -->
    <guava.version>19.0</guava.version>

    <!-- 日期时间操作 -->
    <joda-time.version>2.9.4</joda-time.version>

    <junit.version>4.12</junit.version>
    <!-- 工具类依赖包 end -->


    <!-- CACHE -->
    <ehcache-core.version>2.6.11</ehcache-core.version>
    <ehcache-web.version>2.0.4</ehcache-web.version>
    <ehcache.version>2.10.2</ehcache.version>
    <jedis.version>2.9.0</jedis.version>


  </properties>

  <dependencyManagement>
    <dependencies>

      <!-- Spring start -->
      <!-- Spring core container -->
      <!-- spring-core:核心工具包,外部依赖Commons Logging， (Log4J)。 -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-core</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <!-- spring-beans:SpringIoC(依赖注入)的基础实现。访问配置文件、创建和管理bean 以及进行Inversion 
        of Control / Dependency Injection（IoC/DI）操作相关的所有类 -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-beans</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <!-- spring-context:提供在基础IoC功能上的扩展服务，此外还提供许多企业级服务的支持，如邮件服务、任务调度、JNDI定位、EJB集成、远程访问、缓存以及各种视图层框架的封装等 -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <!-- spring-context-support:含支持UI模版（Velocity，FreeMarker，JasperReports），邮件服务，脚本服务(JRuby)，缓存Cache（EHCache），任务计划Scheduling（uartz）方面的类。 -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context-support</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <!-- Spring Expression是Spring框架中一个强大表达式解析语言，支持在运行时动态的解析表达式给对象赋值 -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-expression</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <!-- Spring data access / integration -->
      <!-- Spring 与所有的主要的ORM映射框架都集成的很好，包括Hibernate、JDO实现、TopLink和IBatis SQL 
        Map等。Spring为所有的这些框架提供了模板之类的辅助类，达成了一致的编程风格。 -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-orm</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <!-- OXM是Object-to-XML-Mapping的缩写，它是一个O/M-mapper，将java对象映射成XML数据，或者将XML数据映射成java对象。 -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-oxm</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-aop</artifactId>
        <version>${spring.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-tx</artifactId>
        <version>${spring.version}</version>
      </dependency>

      <!-- 这个jar 文件包含对Spring 对JDBC 数据访问进行封装的所有类。外部依赖spring-beans，spring-dao。 -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-jdbc</artifactId>
        <version>${spring.version}</version>
      </dependency>

      <!-- JMS即Java消息服务（Java Message Service）应用程序接口，是一个Java平台中关于面向消息中间件（MOM）的API， 
        用于在两个应用程序之间，或分布式系统中发送消息，进行异步通信。Java消息服务是一个与具体平台无关的API，绝大多数MOM提供商都对JMS提供支持。 -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-jms</artifactId>
        <version>${spring.version}</version>
      </dependency>

      <!-- Spring Web -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-web</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-webmvc</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <!-- Spring end -->
      <!-- SECURITY begin -->
      <dependency>
        <groupId>org.apache.shiro</groupId>
        <artifactId>shiro-core</artifactId>
        <version>${shiro.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.shiro</groupId>
        <artifactId>shiro-spring</artifactId>
        <version>${shiro.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.shiro</groupId>
        <artifactId>shiro-cas</artifactId>
        <version>${shiro.version}</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.shiro</groupId>
        <artifactId>shiro-web</artifactId>
        <version>${shiro.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.shiro</groupId>
        <artifactId>shiro-ehcache</artifactId>
        <version>${shiro.version}</version>
      </dependency>
      <!-- SECURITY end -->


      <!-- javax.servlet-api -->
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version>${servlet-api.version}</version>
      </dependency>
      <!-- jsp-api -->
      <dependency>
        <groupId>javax.servlet.jsp</groupId>
        <artifactId>jsp-api</artifactId>
        <version>${jsp-api.version}</version>
        <exclusions>
          <exclusion>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <!-- 辅助依赖库 start -->
      <dependency>
        <groupId>org.aspectj</groupId>
        <artifactId>aspectjrt</artifactId>
        <version>${aspectj.version}</version>
      </dependency>
      <dependency>
        <groupId>org.aspectj</groupId>
        <artifactId>aspectjweaver</artifactId>
        <version>${aspectj.version}</version>
      </dependency>
      <!-- 是一个强大的，高性能，高质量的Code生成类库， 它可以在运行期扩展Java类与实现Java接口。 Hibernate用它来实现PO(Persistent 
        Object 持久化对象)字节码的动态生成。 -->
      <dependency>
        <groupId>cglib</groupId>
        <artifactId>cglib</artifactId>
        <version>${cglib.version}</version>
      </dependency>
      <!-- cglib-nodep-2.2.jar：使用nodep包不需要关联asm的jar包,jar包内部包含asm的类. cglib-2.2.jar：使用此jar包需要关联asm的jar包,否则运行时报错. -->
      <dependency>
        <groupId>cglib</groupId>
        <artifactId>cglib-nodep</artifactId>
        <version>${cglib-nodep.version}</version>
      </dependency>
      <!-- ASM是一个java字节码操纵框架，它能被用来动态生成类或者增强既有类的功能 -->
      <dependency>
        <groupId>org.ow2.asm</groupId>
        <artifactId>asm</artifactId>
        <version>${asm.version}</version>
      </dependency>
      <dependency>
        <groupId>org.ow2.asm</groupId>
        <artifactId>asm-commons</artifactId>
        <version>${asm.version}</version>
      </dependency>
      <dependency>
        <groupId>org.ow2.asm</groupId>
        <artifactId>asm-all</artifactId>
        <version>${asm.version}</version>
      </dependency>

      <!-- 辅助依赖库 start -->

      <!-- 数据持久化相关依赖包 begin -->

      <!-- MyBatis start -->
      <dependency>
        <groupId>org.mybatis</groupId>
        <artifactId>mybatis</artifactId>
        <version>${mybatis.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mybatis</groupId>
        <artifactId>mybatis-spring</artifactId>
        <version>${mybatis-spring.version}</version>
      </dependency>
      <!-- MyBatis end -->

      <!-- hibernate start -->
      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-core</artifactId>
        <version>${hibernate.version}</version>
      </dependency>
      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-entitymanager</artifactId>
        <version>${hibernate.version}</version>
      </dependency>
      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-entitymanager</artifactId>
        <version>${hibernate.version}</version>
      </dependency>

      <!-- hibernate start -->

      <!-- connection pool -->
      <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>druid</artifactId>
        <version>${druid.version}</version>
      </dependency>



      <!-- jdbc driver -->
      <dependency>
        <groupId>mysql</groupId>
        <artifactId>mysql-connector-java</artifactId>
        <version>${mysql.driver.version}</version>
        <scope>runtime</scope>
      </dependency>
      <dependency>
        <groupId>com.oracle</groupId>
        <artifactId>ojdbc14</artifactId>
        <version>${oracle.driver.version}</version>
        <scope>runtime</scope>
      </dependency>
      <!-- jTDS is an open source 100% pure Java (type 4) JDBC 3.0 driver 
        for Microsoft SQL Server (6.5, 7, 2000, 2005, 2008, 2012) and Sybase ASE 
        (10, 11, 12, 15). jTDS is based on FreeTDS and is currently the fastest production-ready 
        JDBC driver for SQL Server and Sybase. jTDS is 100% JDBC 3.0 compatible, 
        supporting forward-only and scrollable/updateable ResultSets and implementing 
        all the DatabaseMetaData and ResultSetMetaData methods. -->
      <dependency>
        <groupId>net.sourceforge.jtds</groupId>
        <artifactId>jtds</artifactId>
        <version>${jtds.version}</version>
        <scope>runtime</scope>
      </dependency>
      <!-- 轻量级的内嵌数据库 -->
      <dependency>
        <groupId>com.h2database</groupId>
        <artifactId>h2</artifactId>
        <version>${h2.database.version}</version>
      </dependency>
      <!-- 数据持久化相关依赖包 end -->



      <!-- 工具类依赖包 start -->

      <!-- json start -->
      <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>fastjson</artifactId>
        <version>${fastjson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>jackson.version</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>jackson.version</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${jackson.version}</version>
      </dependency>

      <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>${gson.version}</version>
      </dependency>

      <!-- json end -->

      <!-- LOGGING begin -->
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-core</artifactId>
        <version>${log4j-core.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-api</artifactId>
        <version>${log4j-core.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-log4j12</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <!-- common-logging 实际调用slf4j -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jcl-over-slf4j</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <!-- java.util.logging 实际调用slf4j -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jul-to-slf4j</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <!-- LOGGING end -->

      <!-- 报表工具包 -->
      <dependency>
        <groupId>net.sf.jasperreports</groupId>
        <artifactId>jasperreports</artifactId>
        <version>${jasperreports.version}</version>
      </dependency>


      <!-- 工作流、业务流 Activiti is a light-weight workflow and Business Process 
        Management (BPM) Platform targeted at business people, developers and system 
        admins. -->
      <dependency>
        <groupId>org.activiti</groupId>
        <artifactId>activiti-engine</artifactId>
        <version>${activiti.version}</version>
      </dependency>
      <dependency>
        <groupId>org.activiti</groupId>
        <artifactId>activiti-spring</artifactId>
        <version>${activiti.version}</version>
      </dependency>
      <dependency>
        <groupId>org.activiti</groupId>
        <artifactId>activiti-bpmn-model</artifactId>
        <version>${activiti.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jbpm</groupId>
        <artifactId>jbpm-bpmn2</artifactId>
        <version>${jbpm.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jbpm</groupId>
        <artifactId>jbpm-persistence-jpa</artifactId>
        <version>${jbpm.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jbpm</groupId>
        <artifactId>jbpm-flow</artifactId>
        <version>${jbpm.version}</version>
      </dependency>

      <!-- XML start -->
      <!-- Xerces2 is a fully conforming XML Schema 1.0 processor. A partial 
        experimental implementation of the XML Schema 1.1 Structures and Datatypes 
        Working Drafts (December 2009) and an experimental implementation of the 
        XML Schema Definition Language (XSD): Component Designators (SCD) Candidate 
        Recommendation (January 2010) are provided for evaluation. For more information, 
        refer to the XML Schema page. -->
      <dependency>
        <groupId>xerces</groupId>
        <artifactId>xercesImpl</artifactId>
        <version>${xerces2.version}</version>
      </dependency>
      <dependency>
        <groupId>dom4j</groupId>
        <artifactId>dom4j</artifactId>
        <version>${dom4j.version}</version>
      </dependency>
      <!--Xml数据导出导入。 XStream是一个Java对象和XML相互转换的工具，很好很强大。提供了所有的基础类型、数组、集合等类型直接转换的支持。 -->
      <dependency>
        <groupId>com.thoughtworks.xstream</groupId>
        <artifactId>xstream</artifactId>
        <version>${xstream.version}</version>
      </dependency>

      <!-- XML end -->
      <!-- HTML start -->
      <!-- jsoup 是一款Java 的HTML解析器，可直接解析某个URL地址、HTML文本内容。它提供了一套非常省力的API，可通过DOM，CSS以及类似于jQuery的操作方法来取出和操作数据。 -->
      <dependency>
        <groupId>org.jsoup</groupId>
        <artifactId>jsoup</artifactId>
        <version>${jsoup.version}</version>
      </dependency>

      <!-- HTML end -->

      <!-- 语言、搜索、分词相关依赖包 start -->
      <!-- Lucene是apache软件基金会4 jakarta项目组的一个子项目，是一个开放源代码的全文检索引擎工具包 -->
      <dependency>
        <groupId>org.apache.lucene</groupId>
        <artifactId>lucene-core</artifactId>
        <version>${lucene.version}</version>
      </dependency>
      <!-- Apache Solr 是一个开源的搜索服务器。Solr 使用 Java 语言开发，主要基于 HTTP 和 Apache Lucene 
        实现。Apache Solr 中存储的资源是以 Document 为对象进行存储的。 -->

      <dependency>
        <groupId>org.apache.solr</groupId>
        <artifactId>solr-solrj</artifactId>
        <version>${apache.solr.version}</version>
      </dependency>
      <!-- ElasticSearch是一个基于Lucene的搜索服务器。它提供了一个分布式多用户能力的全文搜索引擎，基于RESTful 
        web接口。Elasticsearch是用Java开发的，并作为Apache许可条款下的开放源码发布，是当前流行的企业级搜索引擎。设计用于云计算中，能够达到实时搜索，稳定，可靠，快速，安装使用方便。 -->
      <dependency>
        <groupId>org.elasticsearch</groupId>
        <artifactId>elasticsearch</artifactId>
        <version>${elasticsearch.version}</version>
      </dependency>
      <!-- pinyin4j:Support Chinese character (both Simplified and Tranditional) 
        to most popular Pinyin systems, including Hanyu Pinyin, Tongyong Pinyin, 
        Wade-Giles, MPS2, Yale and Gwoyeu Romatzyh. Support multiple pronounciations 
        and customized output. -->
      <dependency>
        <groupId>com.belerweb</groupId>
        <artifactId>pinyin4j</artifactId>
        <version>${pinyin4j.version}</version>
      </dependency>


      <!-- 语言 、搜索、分词相关依赖包 end -->

      <!-- Apache POI:提供对Microsoft Office各种文档的操作 -->
      <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi</artifactId>
        <version>${apache.poi.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi-ooxml</artifactId>
        <version>${apache.poi.version}</version>
      </dependency>

      <!-- PDF start -->
      <dependency>
        <groupId>com.itextpdf</groupId>
        <artifactId>itextpdf</artifactId>
        <version>${itextpdf.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.pdfbox</groupId>
        <artifactId>pdfbox</artifactId>
        <version>${apache.pdfbox.version}</version>
      </dependency>
      <!-- PDF end -->

      <!-- email相关依赖包 start -->
      <dependency>
        <groupId>javax.mail</groupId>
        <artifactId>javax.mail-api</artifactId>
        <version>${javax.mail.version}</version>
      </dependency>
      <!-- email相关依赖包 end -->

      <!-- YUI Compressor是一个压缩js、css的工具,压缩后的文件几乎接近原文件的一半大小 -->
      <dependency>
        <groupId>com.yahoo.platform.yui</groupId>
        <artifactId>yuicompressor</artifactId>
        <version>${yuicompressor.version}</version>
      </dependency>




      <!-- Apache Commons工具集 start -->

      <!-- commons-lang2 提供java基本对象方法的工具类包 如：StringUtils,ArrayUtils、DateUtils等等. -->
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${commons-lang3.version}</version>
      </dependency>
      <!-- IO工具的封装 -->
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${commons-io.version}</version>
      </dependency>
      <!-- commons-codec:处理常用的编码方法的工具类包 例如DES、SHA1、MD5、Base64等. -->
      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>${commons-codec.version}</version>
      </dependency>
      <!-- 提供文件上传功能. -->
      <dependency>
        <groupId>commons-fileupload</groupId>
        <artifactId>commons-fileupload</artifactId>
        <version>${commons-fileupload.version}</version>
      </dependency>
      <!-- 提供了对于JavaBean进行各种操作，克隆对象,属性等等 -->
      <dependency>
        <groupId>commons-beanutils</groupId>
        <artifactId>commons-beanutils</artifactId>
        <version>${commons-beanutils.version}</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <!-- Apache Commons工具集 end -->

      <!-- Guava is a suite of core and expanded libraries that include utility 
        classes, google's collections, io classes, and much much more. Guava has 
        only one code dependency - javax.annotation, per the JSR-305 spec. -->
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>
      <!-- 日期时间工具库，JodaTime 提供了一组Java类包用于处理包括ISO8601标准在内的date和time。Date and 
        time library to replace JDK date handling -->
      <dependency>
        <groupId>joda-time</groupId>
        <artifactId>joda-time</artifactId>
        <version>${joda-time.version}</version>
      </dependency>
      <!-- GENERAL UTILS end -->

      <!-- CACHE begin -->
      <dependency>
        <groupId>net.sf.ehcache</groupId>
        <artifactId>ehcache-core</artifactId>
        <version>${ehcache-core.version}</version>
      </dependency>
      <dependency>
        <groupId>net.sf.ehcache</groupId>
        <artifactId>ehcache-web</artifactId>
        <version>${ehcache-web.version}</version>
      </dependency>
      <!-- <dependency> <groupId>net.sf.ehcache</groupId> <artifactId>ehcache</artifactId> 
        <version>${ehcache.version}</version> </dependency> -->
      <!-- Jedis 是 Redis 官方首选的 Java 客户端开发包。 -->
      <dependency>
        <groupId>redis.clients</groupId>
        <artifactId>jedis</artifactId>
        <version>${jedis.version}</version>
      </dependency>
      <!-- CACHE end -->



      <!-- Tests dependencies -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.5.1</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
          <verbose>true</verbose>
          <fork>true</fork>
          <executable>${JAVA_HOME}/bin/javac</executable>
          <compilerVersion>1.8</compilerVersion>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.19.1</version>
        <configuration>
          <jvm>${JAVA_HOME}/bin/java</jvm>
          <forkMode>once</forkMode>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>1.4.1</version>
        <inherited>true</inherited>
        <executions>
          <execution>
            <id>enforce</id>
            <configuration>
              <rules>
                <dependencyConvergence></dependencyConvergence>
                <requireJavaVersion>
                  <version>1.8</version>
                </requireJavaVersion>
              </rules>
            </configuration>
            <goals>
              <goal>enforce</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <versionRange>[1.0.0,)</versionRange>
                    <goals>
                      <goal>enforce</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>